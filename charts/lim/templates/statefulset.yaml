apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "lim.fullname" . }}
spec:
  serviceName: {{ include "lim.fullname" . }}
  selector:
    matchLabels:
      {{- include "lim.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}:
      {{- end }}
      labels:
        {{- include "lim.selectorLabels" . | nindent 8 }}
        {{- if .Values.podLabels }}
        {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      # LIM uses SQL Express which runs as NT SERVICE\MSSQL$SQLEXPRESS .
      # That user cannot write on a mounted volume. This initContainer grants permissions
      # to that user.
      initContainers:
        - name: fix-lim-dir-ownership
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - powershell.exe
            - |
              mkdir C:\lim -Force | Out-Null;
              icacls.exe 'C:\lim' /grant 'NT SERVICE\MSSQL$SQLEXPRESS:F'
          volumeMounts:
          - name: lim-data
            mountPath: 'C:\lim'
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: LimUseSSL
              value: "false"
            - name: LimAdminWebSiteName
              value: {{ .Values.adminWebSiteName | quote }}
            - name: LimServiceSiteName
              value: {{ .Values.serviceWebSiteName | quote }}
            - name: LimApiSiteName
              value: {{ .Values.apiSiteName | quote }}
            - name: LimDirectory
              value: 'C:\lim'
            - name: LimAdminUsername
              value: {{ .Values.adminUsername | quote }}
            - name: LimAdminPassword
              valueFrom:
                secretKeyRef:
                  name: {{ include "lim-secret.fullname" . }}
                  key: lim-admin-password
            - name: LimAdminEmail
              value: {{ .Values.adminEmail | quote }}
            - name: LimAdminFriendlyName
              value: {{ .Values.adminFriendlyName | quote }}
            {{- with .Values.additionalEnvironment }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          volumeMounts:
            - name: lim-data
              mountPath: 'C:\lim'
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 120
            failureThreshold: 6
            httpGet:
              path: /{{ .Values.adminWebSiteName }}
              port: http
          readinessProbe:
            httpGet:
              path: /{{ .Values.adminWebSiteName }}
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: lim-data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "lim.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      nodeSelector:
      {{- with .Values.nodeSelector }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      tolerations:
      {{- with .Values.tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
